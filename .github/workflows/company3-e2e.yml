name: Company 3 E2E Testing

on: [push]
#    branches: [main]
#  pull_request:
#    branches: [main]
#  repository_dispatch:
#    types: 
#      - company3-algorithm-1
#      - company3-algorithm-2
#      - company3-backend

# Make sure URLs defined here correspond with ports defined below
env:
  BACKEND_URL: http://localhost:4000/graphql
  ALGORITHM1_URL: http://localhost:4040
  ALGORITHM2_URL: http://localhost:5000

jobs:
  integration:
    name: End to End Integration Testing
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      algorithm1:
        image: ghcr.io/seng499-s22-company3/algorithm-1:latest
        env:
          PORT: 4040
        ports:
          - 4040:4040
      algorithm2:
        image: ghcr.io/seng499-s22-company3/algorithm-2:latest
        env:
          PORT: 5000
        ports:
          - 5000:5000
      backend:
        image: ghcr.io/seng499-s22-company3/backend:latest
        env:
          PORT: 4000
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
          CI: false
          NODE_ENV: development
        ports:
          - 4000:4000
        # options: >-
        #   --health-cmd "curl -f http://localhost:4000/healthcheck"
        #   --health-interval 10s
        #   --health-timeout 5s
        #   --health-retries 5
      postgres:
        # Docker Hub image
        image: postgres:14-alpine
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Checkout shared repo 
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Output repo that triggered E2E tests
        run: echo ${{ github.event.client_payload.repo }}

      - name: Checkout backend repo for DB migration
        uses: actions/checkout@v3
        with:
          repository: SENG499-S22-Company3/backend
          path: c3/backend

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Cache npm dependencies
        uses: actions/cache@v1
        with:
          key: npm-${{ hashFiles('package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      
      - name: Install dependencies
        run: npm ci --no-audit --no-progress

      - name: Database migrations
        run: npx -y prisma migrate dev && npx -y prisma db seed
        working-directory: c3/backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres   

      - name: Test
        env:
          BACKEND_URL: http://localhost:4000/graphql
        run: npm test